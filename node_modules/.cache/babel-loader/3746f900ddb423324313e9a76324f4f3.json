{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_ERROR, DESCARGA_PRODUCTOS_EXITO, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR } from \"../types\";\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2'; //Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      //Insertar en la API\n      await clienteAxios.post('/productos', producto); //Si todo sale bien actualizar el state\n\n      dispatch(agregarProductoExito(producto)); //Alerta\n\n      Swal.fire('Correcto', 'El producto se agrego correctamente', 'success');\n    } catch (error) {\n      console.log(error);\n      dispatch(agregarProductoError(true)); //Alerta de error\n\n      Swal.fire({\n        icon: 'error',\n        title: 'Hubo un error,',\n        text: 'Hubo un error, intenta nuevamente'\n      });\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n}); //Funcion que descarga los productos de la base de datos\n\n\nexport function obtenerProductiosAction() {\n  return async dispatch => {\n    dispatch(descargarProductos());\n\n    try {\n      const respuesta = await clienteAxios.get('/productos');\n      dispatch(descargaProductosExitosa(respuesta.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(descargaProductosError());\n    }\n  };\n}\n\nconst descargarProductos = () => ({\n  type: COMENZAR_DESCARGA_PRODUCTOS,\n  payload: true\n});\n\nconst descargaProductosExitosa = productos => ({\n  type: DESCARGA_PRODUCTOS_EXITO,\n  payload: productos\n});\n\nconst descargaProductosError = () => ({\n  type: DESCARGA_PRODUCTOS_ERROR,\n  payload: true\n}); //Seleciona y elimina el producto\n\n\nexport function borrarProductoAction(id) {\n  return async dispatch => {\n    dispatch(obtenerProductoEliminar(id));\n    console.log(id);\n  };\n}\nexport const obtenerProductoEliminar = id => ({\n  type: OBTENER_PRODUCTO_ELIMINAR,\n  payload: id\n});","map":{"version":3,"sources":["C:/Users/Matias de la cerda/Desktop/Redux/crudredux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_ERROR","DESCARGA_PRODUCTOS_EXITO","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","clienteAxios","Swal","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","fire","error","console","log","agregarProductoError","icon","title","text","type","payload","estado","obtenerProductiosAction","descargarProductos","respuesta","get","descargaProductosExitosa","data","descargaProductosError","productos","borrarProductoAction","id","obtenerProductoEliminar"],"mappings":"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","sourcesContent":["import {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    DESCARGA_PRODUCTOS_EXITO,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR\r\n  } from \"../types\";\r\n  import clienteAxios from '../config/axios';\r\n  import Swal from 'sweetalert2'\r\n\r\n //Crear nuevos productos\r\n export function crearNuevoProductoAction(producto) {\r\n     return async (dispatch) => {\r\n         dispatch( agregarProducto() );\r\n\r\n         try {\r\n             //Insertar en la API\r\n            await clienteAxios.post('/productos', producto);\r\n\r\n             //Si todo sale bien actualizar el state\r\n            dispatch(agregarProductoExito(producto))\r\n\r\n            //Alerta\r\n            Swal.fire(\r\n                'Correcto',\r\n                'El producto se agrego correctamente',\r\n                'success'\r\n                )\r\n\r\n\r\n         } catch (error) {\r\n             console.log(error)\r\n            dispatch(agregarProductoError(true))\r\n\r\n            //Alerta de error\r\n            Swal.fire({\r\n                icon:'error',\r\n                title:'Hubo un error,',\r\n                text:'Hubo un error, intenta nuevamente'\r\n\r\n            })\r\n         }\r\n     }\r\n } \r\n\r\n\r\n const agregarProducto = () => ({\r\n     type: AGREGAR_PRODUCTO,\r\n     payload:true\r\n     \r\n })\r\n\r\n // Si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n // si hubo un error\r\n\r\n const agregarProductoError = estado => ({\r\n    type: AGREGAR_PRODUCTO_ERROR,\r\n    payload: estado\r\n\r\n })\r\n\r\n\r\n //Funcion que descarga los productos de la base de datos\r\n export function obtenerProductiosAction() {\r\n     return async (dispatch) =>{\r\n         dispatch( descargarProductos());\r\n\r\n         try {\r\n             const respuesta = await clienteAxios.get('/productos');\r\n             dispatch(descargaProductosExitosa(respuesta.data))\r\n\r\n         } catch (error) {\r\n             console.log(error);\r\n            dispatch(descargaProductosError());\r\n         }\r\n     }\r\n }\r\n\r\n const descargarProductos = () => ({\r\n     type: COMENZAR_DESCARGA_PRODUCTOS,\r\n     payload:true\r\n })\r\n\r\n const descargaProductosExitosa = productos =>({\r\n     type: DESCARGA_PRODUCTOS_EXITO,\r\n     payload: productos\r\n })\r\n\r\n const descargaProductosError = () => ({\r\n     type: DESCARGA_PRODUCTOS_ERROR,\r\n     payload: true\r\n })\r\n\r\n //Seleciona y elimina el producto\r\n export function borrarProductoAction(id) {\r\n     return async (dispatch) => {\r\n         dispatch(obtenerProductoEliminar(id));\r\n         console.log(id);\r\n     }\r\n }\r\n\r\n\r\n export const obtenerProductoEliminar = id => ({\r\n     type: OBTENER_PRODUCTO_ELIMINAR,\r\n     payload: id\r\n })"]},"metadata":{},"sourceType":"module"}