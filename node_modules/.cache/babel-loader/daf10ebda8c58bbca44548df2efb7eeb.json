{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR } from \"../types\";\nimport clienteAxios from '../config/axios'; //Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      //Insertar en la API\n      await clienteAxios.post('/holi', producto); //Si todo sale bien actualizar el state\n\n      dispatch(agregarProductoExito(producto));\n    } catch (error) {\n      console.log(error);\n      dispatch(agregarProductoError(true));\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["C:/Users/Matias de la cerda/Desktop/Redux/crudredux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","clienteAxios","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","error","console","log","agregarProductoError","type","payload","estado"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,QAIS,UAJT;AAKE,OAAOC,YAAP,MAAyB,iBAAzB,C,CAED;;AACA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAC/C,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAEC,eAAe,EAAjB,CAAR;;AAEA,QAAI;AACA;AACD,YAAMJ,YAAY,CAACK,IAAb,CAAkB,OAAlB,EAA2BH,QAA3B,CAAN,CAFC,CAIA;;AACDC,MAAAA,QAAQ,CAACG,oBAAoB,CAACJ,QAAD,CAArB,CAAR;AACF,KAND,CAME,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACDJ,MAAAA,QAAQ,CAACO,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACF;AACJ,GAbD;AAcH;;AAGD,MAAMN,eAAe,GAAG,OAAO;AAC3BO,EAAAA,IAAI,EAAEd,gBADqB;AAE3Be,EAAAA,OAAO,EAAC;AAFmB,CAAP,CAAxB,C,CAMA;;;AACD,MAAMN,oBAAoB,GAAGJ,QAAQ,KAAK;AACtCS,EAAAA,IAAI,EAAEb,sBADgC;AAEtCc,EAAAA,OAAO,EAAEV;AAF6B,CAAL,CAArC,C,CAIC;;;AAEA,MAAMQ,oBAAoB,GAAGG,MAAM,KAAK;AACrCF,EAAAA,IAAI,EAAEZ,sBAD+B;AAErCa,EAAAA,OAAO,EAAEC;AAF4B,CAAL,CAAnC","sourcesContent":["import {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n  } from \"../types\";\r\n  import clienteAxios from '../config/axios';\r\n\r\n //Crear nuevos productos\r\n export function crearNuevoProductoAction(producto) {\r\n     return async (dispatch) => {\r\n         dispatch( agregarProducto() );\r\n\r\n         try {\r\n             //Insertar en la API\r\n            await clienteAxios.post('/holi', producto);\r\n\r\n             //Si todo sale bien actualizar el state\r\n            dispatch(agregarProductoExito(producto))\r\n         } catch (error) {\r\n             console.log(error)\r\n            dispatch(agregarProductoError(true))\r\n         }\r\n     }\r\n } \r\n\r\n\r\n const agregarProducto = () => ({\r\n     type: AGREGAR_PRODUCTO,\r\n     payload:true\r\n     \r\n })\r\n\r\n // Si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n // si hubo un error\r\n\r\n const agregarProductoError = estado => ({\r\n    type: AGREGAR_PRODUCTO_ERROR,\r\n    payload: estado\r\n\r\n })"]},"metadata":{},"sourceType":"module"}