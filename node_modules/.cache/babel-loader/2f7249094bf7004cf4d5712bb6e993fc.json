{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR } from \"../types\"; //Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      dispatch(agregarProductoExito(producto));\n    } catch (error) {\n      dispatch(agregarProductoError(true));\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO\n}); // Si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = () => ({});","map":{"version":3,"sources":["C:/Users/Matias de la cerda/Desktop/Redux/crudredux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","crearNuevoProductoAction","producto","dispatch","agregarProducto","agregarProductoExito","error","agregarProductoError","type","payload"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,QAIS,UAJT,C,CAMC;;AACA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAC/C,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAEC,eAAe,EAAjB,CAAR;;AAEA,QAAI;AACDD,MAAAA,QAAQ,CAACE,oBAAoB,CAACH,QAAD,CAArB,CAAR;AACF,KAFD,CAEE,OAAOI,KAAP,EAAc;AACbH,MAAAA,QAAQ,CAACI,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACF;AACJ,GARD;AASH;;AAGD,MAAMH,eAAe,GAAG,OAAO;AAC3BI,EAAAA,IAAI,EAAEV;AADqB,CAAP,CAAxB,C,CAKA;;;AACD,MAAMO,oBAAoB,GAAGH,QAAQ,KAAK;AACtCM,EAAAA,IAAI,EAAET,sBADgC;AAEtCU,EAAAA,OAAO,EAAEP;AAF6B,CAAL,CAArC,C,CAIC;;;AAEA,MAAMK,oBAAoB,GAAG,OAAO,EAAP,CAA7B","sourcesContent":["import {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n  } from \"../types\";\r\n\r\n //Crear nuevos productos\r\n export function crearNuevoProductoAction(producto) {\r\n     return (dispatch) => {\r\n         dispatch( agregarProducto() );\r\n\r\n         try {\r\n            dispatch(agregarProductoExito(producto))\r\n         } catch (error) {\r\n            dispatch(agregarProductoError(true))\r\n         }\r\n     }\r\n } \r\n\r\n\r\n const agregarProducto = () => ({\r\n     type: AGREGAR_PRODUCTO\r\n     \r\n })\r\n\r\n // Si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n // si hubo un error\r\n\r\n const agregarProductoError = () => ({\r\n     \r\n })"]},"metadata":{},"sourceType":"module"}